Status: published
Author: Ben Chuanlong Du
Title: Tips for GPU Computing
Date: 2020-05-02 11:49:58
Slug: gpu-tips
Category: Computer Science
Tags: tips, GPU, programming, Nvidia

**
Things on this page are fragmentary and immature notes/thoughts of the author. 
Please read with your own judgement!
**
 
## List GPU Devices on Linux

You can list GPU devices using the following command on linux.

    :::bash
    lspci -v | grep VGA


## Frameworks Supporting Managing GPU Resources

- [Horovod](https://github.com/horovod/horovod)

- [Apache Ray](https://github.com/ray-project/ray)

- [ZeRO + DeepSpeed](https://github.com/microsoft/DeepSpeed)
    is a deep learning optimization library 
    that makes distributed training on GPU clusters easy, efficient, and effective.

## High-level Libraries with Built-in GPU Support 

- TensorFlow

- PyTorch 

- XGBoost

- LightGBM

- [scikit-cuda](https://github.com/lebedov/scikit-cuda)

- [cudf](https://github.com/rapidsai/cudf)

- Numba


## Low-level Libraries for General Purpose GPU Computing

1. CUDA and OpenCL are the 2 frameworks for GPU computing.
    CUDA is commerical and for Nvidia GPUs only 
    while OpenCL is opensource and support more GPUs.
    Generally speaking, 
    CUDA has slight better performance than OpenCL on Nvidia GPUs.
    It is suggested that you go with CUDA if you want to squeeze the most out of performance.

### C++ 

- [Thrust](https://developer.nvidia.com/thrust)

    Thrust is a parallel algorithms library which resembles the C++ Standard Template Library (STL). 
    Thrust is high-level interface greatly enhances programmer productivity 
    while enabling performance portability between GPUs and multicore CPUs. 
    Interoperability with established technologies (such as CUDA, TBB, and OpenMP) facilitates integration with existing software. 

- [ArrayFire](https://github.com/arrayfire/arrayfire)


### Rust

- [ArrayFire-rust](https://github.com/arrayfire/arrayfire-rust)

- [RustaCUDA](https://github.com/bheisler/RustaCUDA)

    Rusty wrapper for the CUDA Driver API.

- [accel](https://github.com/rust-accel/accel)

- [emu](https://github.com/calebwin/emu)

    Emu is a framework for developing safe, robust GPU-accelerated applications in Rust. 

- [ocl](https://github.com/cogciprocate/ocl)

    OpenCL for Rust.

### GPU Computing in Python

Please refer to 
[GPU Computing in Python](http://www.legendu.net/misc/gpu-computing-in-python)
for more details.

https://weeraman.com/put-that-gpu-to-good-use-with-python-e5a437168c01

https://docs.anaconda.com/anaconda/user-guide/tasks/gpu-packages/

https://towardsdatascience.com/python-performance-and-gpus-1be860ffd58d

https://developer.nvidia.com/how-to-cuda-python

https://devblogs.nvidia.com/numba-python-cuda-acceleration/

https://github.com/harrism/numba_examples/blob/master/mandelbrot_numba.ipynb

### Java

- [aparapi](https://github.com/Syncleus/aparapi)

- [jcuda](https://github.com/jcuda/jcuda)

    Java bindings for CUDA.

## External Graphics Card

https://www.pcworld.com/article/2984716/how-to-transform-your-laptop-into-a-gaming-powerhouse-with-an-external-graphics-card.html

https://www.laptopmag.com/articles/best-egpus


## References

[Nvidia CUDA Linux Repositories](https://developer.download.nvidia.com/compute/cuda/repos/)

https://bheisler.github.io/post/state-of-gpgpu-in-rust/

https://towardsdatascience.com/python-performance-and-gpus-1be860ffd58d

https://towardsdatascience.com/speed-up-your-algorithms-part-1-pytorch-56d8a4ae7051

https://towardsdatascience.com/speed-up-your-algorithms-part-2-numba-293e554c5cc1

https://towardsdatascience.com/speed-up-your-algorithms-part-3-parallelization-4d95c0888748

https://towardsdatascience.com/speeding-up-your-algorithms-part-4-dask-7c6ed79994ef

https://github.com/PuneetGrov3r/MediumPosts/blob/master/SpeedUpYourAlgorithms/1)%20PyTorch.ipynb

https://github.com/PuneetGrov3r/MediumPosts/blob/master/SpeedUpYourAlgorithms/2)%20Numba.ipynb

https://github.com/PuneetGrov3r/MediumPosts/blob/master/SpeedUpYourAlgorithms/3)%20Prallelization.ipynb

https://github.com/PuneetGrov3r/MediumPosts/blob/master/SpeedUpYourAlgorithms/4)%20Dask.ipynb

https://github.com/harrism/numba_examples/blob/master/mandelbrot_numba.ipynb
