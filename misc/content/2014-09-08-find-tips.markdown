UUID: 03a0e2cd-fce2-48ec-9fdd-4addcaad0021
Status: published
Date: 2016-05-30 23:13:18
Author: Ben Chuanlong Du
Slug: find-tips
Title: Find Tips
Category: Linux
Tags: linux, find, tips, search

**
Things on this page are
fragmentary and immature notes/thoughts of the author.
It is not meant to readers
but rather for convenient reference of the author and future improvement.
**

1. Find all files with extension ".out" in currently directory and its subdirectory, 
and then make them executable.
```bash
find . -type f -iname *.out -exec chmod +x '{}' \;
# or you can use 
find . -type f -iname *.out -print0 | xargs -0 chmod +x
```

2. Find files whose names contain "conflicted" and remove them.
```bash
find . -iname '*conflicted*' -print0 | xargs -0 rm
```

3. Find executable files in current directory 
```bash
find .  -maxdepth 1 -type f -executable
```

4. Find files with 0 size and delete them
```bash
find /path/to/files -size 0 -ok -exec rm {} \;
```

5. find empty directories 
```bash
find / -type d -empty
```

7. First find files and then pass them to other commands is a very useful trick.
For example, 
you can use the following command to find all R scripts containing the word `paste`.
```bash
find . -type f -iname '*.r' | grep --color=auto paste
```

8. Find files created with in 60 minutes
```bash
find . -cmin 60
```

9. find broken symbolic links
```bash
find . -xtype l
# or
find -L . -type l
```

10. Find files that belong to a user but writable by its group or other people.
```bash
find /path/to/file -user user1 -perm /022
```
11. Check file type of all files under the current directory.
```bash
find . -type f | xargs file
```

-perm mode: File's permission bits are exactly mode (octal or symbolic).
-perm -mode: All  of  the  permission bits mode are set for the file. 
-perm /mode: Any of the permission bits mode are set for the file. 
a little bit trick about how to understand the last 2 permission criterias.
as suggested, think in terms of permission BITs (0/1)

The following command finds all files that readable or writable by the group or (readable or writable) by others.
```bash
find /path/to/file -user user1 -perm /066
```
The following command find all files that readable and writable by the group and (readable and writable) by others.
```bash
find /path/to/file -user user1 -perm -066
```
The following command find all files that readable or writable by the group and (readable or writable) by others.
```bash
find /path/to/file -user user1 -perm /060 -perm /006
```
