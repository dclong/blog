UUID: 03a0e2cd-fce2-48ec-9fdd-4addcaad0021
Status: published
Author: Ben Chuanlong Du
Date: 2016-08-15 21:44:29
Slug: sed-tips
Title: Tips for "sed"
Category: Software
Tags: tips, software, text manipulation, shell, Linux, sed

**
Things on this page are fragmentary and immature notes/thoughts of the author. 
It is not meant to readers but rather for convenient reference of the author and future improvement.
**
 
1. Add `#!/bin/bash` to the first line of all `.txt` files.  
```bash
sed -i '1 s_^_#!/bin/bash\n_' *.txt
```

2. Add `#!/bin/bash` to the last line of all `.txt` files.  
```bash
sed -i '$ s_$_\n#!/bin/bash_' *.txt
```

3. Add `https://www.quandl.com/api/v1/datasets/CME/` to the beginning of each line in a file.
```bash
sed -i 's_^_https://www.quandl.com/api/v1/datasets/CME/_g' done.txt 
```

4. Get rid of all spaces (helpful for comparing not well formatted code)
对于格式问题 可以直接先删除空格等 然后再比较文件！！！very briliant idea!!! 
```bash
sed -i 's/ //g' *.r
```

## Examples of Cleaning CSV Data

1. Replace all ` + ` with `_` in the first (header) line.
```bash
sed -i '1 s/ + /_/g' *.csv
```
2. Replace all ` ` with `_` in the first (header) line.
```bash
sed -i '1 s/ /_/g' *.csv
```
3. Replace all `-` with `_` in the first (header) line.
```bash
sed -i '1 s/-/_/g' *.csv
```
4. Replace all `.` with `_` in the first (header) line.
```bash
sed -i '1 s/\./_/g' *.csv
```
5. Print the first (header) line of all CSV documents seprated by dash lines.

```bash
echo "--------------------------------------------------";
for f in *.csv; do
    head $f -n 1;
    echo "--------------------------------------------------";
done
```


```bash
sed -i 'd/^layout: page/' *.md
sed -i '/^layout: page/d' *.md
sed -i '/^comments: yes/d' *.md
sed -i '/^---$/d' *.md
sed -i '/^title: /Title: /s' *.md
sed -i 's/^title: /Title: /' *.md
sed -i "2 s/^/Date: 2013-10-20 00:00:00\n/" *.md

sed -i 's/\([0-9]\+\)\.  /\1\. /g' *
```

1. insert "Author: Ben Chuanlong Du" as the 2 line into a text file. 
Notice the `\` delimiter. You cannot use `/`.
```bash
sed -i '2 i\Author: Ben Chuanlong Du' path_to_file
```
However, 
if text file contains only 1 line, 
the above command does not do anything!

2. Add a blank line at the beginning of file.
```bash
sed '1 i\\' file.txt
```

### sed

4. Code for rick's problem (splitting a column into 2)
```bash
sed 's/\(s[0-9]\{1,2\}\)" "\(t[0-9]\{1,2\}\)/\1-\2/g' testing.txt
```
16. 
```bash
sed -i '1 s_^_#!/bin/bash\n_' *.txt
```


